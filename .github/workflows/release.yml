name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for trusted publishing to PyPI

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release  # Requires manual approval (optional, configure in GitHub settings)

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies and build
        run: |
          uv sync --all-extras --dev
          uv build

      - name: Run tests before release
        run: uv run pytest tests/ -v

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Verify version matches tag
        run: |
          TOML_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          if [ "$TOML_VERSION" != "${{ steps.get_version.outputs.VERSION }}" ]; then
            echo "Error: Version in pyproject.toml ($TOML_VERSION) doesn't match tag (${{ steps.get_version.outputs.VERSION }})"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to PyPI
        run: uv publish
        # Uses PyPI trusted publishing (configure at https://pypi.org/manage/account/publishing/)
        # No API token needed if trusted publishing is set up
        # Otherwise, add PYPI_TOKEN secret to repository
